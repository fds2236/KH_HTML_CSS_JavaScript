/* 전체 선택자 : 모든 요소를 한 번에 선택자로 지정하는 방법 */
*{
    color : black;
    
}

/* 태그 선택자 : 태그명으로 선택자를 지정하는 방법 */
/*
div{
    width: 1000px;
    height: 200px;
    background-color: lightyellow;
    color: yellowgreen;
}
p {
    font-style: italic;
}
*/

/* 클래스 선택자 : .클래스명 */
.accent{
    border: 1px solid #000;
    padding: 5px;
}
.bg{
    background-color: lightgoldenrodyellow;
}
/* 아이디 선택자 : id속성값을 이용해 선택자를 지정하는 방법 */
/* 속성값 앞에 #기호를 붙임 */
/* 클래스 선택자는 문서에서 여러 번 적용할 수 있는 반면에 id선택자는 문제에서 한 번만 적용 */
#container{
    width: 500px;
    margin: 10px auto; /* 테두리의 바깥 여백 */
    padding: 10px; /* 테투리의 안쪽 여백 */
    border: 1px solid #000; /* 테두리 라인 지정 */
}
/* 기본 속성 선택자 : 속성과 값을 사용해 선택자를 지정하는 방법 */
a[target="_blank"] {
    color:blue;
}
a[target="_self"] {
    color:green;
}

/* 조합 선택자 : 기본 선택자에 여러가지 조합을 추가해 사용하는 방법 */
/* 콤마로 구분해 여러가지 선택자를 한꺼번에 사용 */
p{
    color:red
}
#title{
    color: red
}
.red{
    color: red
}
/* => 이렇게 한 번에  쓰기 */
p, title, .red {
    color: red
}

/* 자식 선택자 : 부모 요소의 하위에 있는 자식 요소에 스타일을 적용할 때 사용 */
/* 부모선택자 > 자식선택자 {css코드 사용} */
.box > p{
    background-color: blanchedalmond
}

/* 인접 형제 선택자 : 지정한 선택자 요소 바로 다음에 있는 형제 관계 요소를 선택자로 지정 */
/* (바로 뒤에 와야함) */
/* 이전 선택자 + 대상 선택자 {CSS 코드 작성} */
h1 + h2{
    background-color: cadetblue;
}

/* 일반 형제 선택자 : 이전 선택자 뒤에 오는 형제 관계 요소를 선택자로 지정 */
/* (바로 뒤에 올 필요 없음) */
/* 이전 선택자 ~ 대상 선택자 {CSS코드 작성} */
h1 ~ h3{
    background-color: chocolate;
}

/* 가상요소 선택자 : html에 구성되어 있지 않지만 마치 존재하는 것처럼 취급해 선택하는 선택자 */
p::before{
    content: '@@'
}
p::after{
    content: '^^';
}

/* 가상클래스 선택자 */
/* 1. 링크 가상 클래스 선택자 : 링크 상태를 이용해 선택하는 방법  */
/* 기존 요소 : 가상 클래스 선택자 {css코드 작성} */
/* :link 한 번도 방문하지 않은 링크일 때 선택 */
/* :visited 한 번이라도 방문한 적이 있는 링크일 때 선택 */
a:link{
    color:blue;
}
a:visited{
    color:grey;
}
/* 2. 동적 가상 클래스 선택자 */
/* :hover 요소에 마우스를 올리면 해당 태그가 선택됨 */
/* :active 요소를 마우스 클릭하고 있는 동안 태그가 선택 */
button{
    width: 150px;
    height: 80px;
    background-color: lightblue;
    color:white;
    transition: 1s .5s; /* 지속시간, 대기시간 */
}

/* button:hover {
    width: 160px;
    height: 90px;
    background-color: red;
}
button:active {
    width: 160px;
    height: 90px;
    background-color: blue;
} */

/* 3. 입력 요소 가상 클래스 선택자 : 입력 요소의 특정 상태를 이용해 선택자로 지정하는 방법 */
/* :focus 입력 요소에 커서가 활성화되면 선택자로 지정 */
/* :checked 체크 표시가 있으면 선택자로 지정 */
/* :disabled 요소가 비활성화되면 선택자로 지정 */
/* :enabled */
input:focus{
    color:darkblue;
    background-color:yellowgreen;
}

/* 4. 구조적 가상 클래스 선택자 : 웹 문서의 구조를 기준으로 특정 위치에 있는 요소 선택 */
/* 자식 요소 선택 */
/* E:first-child 첫번째 자식 요소를 선택 */
/* E:last-child 마지막 자식 요소를 선택 */
/* E:nth-child(n) n번째 자식 요소를 선택 */
/* E:nth-last-child(n) 뒤에서부터 n번째 자식 요소를 선택 */
/* :nth-of-type(n) 부모 요소의 자식 중 n번째 */

li:first-child {
    color: red;
}
li:last-child {
    color: blue;
}
li:nth-child(3){
    color: yellow;
}
li:nth-last-child(2) {
    color:blueviolet;
}
/*  */
/* :nth-of-type(n) : 부모요소의 자식 중 n번쨰 */
p:nth-child(1){
    color: green;
}
p:nth-of-type(2) {
    color:aqua;
}
div.box2{
    background-color: black;
}
p.box2{
    background-color:aquamarine;
}
section#main{
    background-color: chartreuse;
} 
